{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/Category Services/category-service.service\";\nimport * as i2 from \"src/app/Services/Quiz Services/quiz-services.service\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/slide-toggle\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\n\nfunction AddQuizComponent_option_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r1[\"cid\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(c_r1[\"title\"]);\n  }\n}\n\nexport let AddQuizComponent = /*#__PURE__*/(() => {\n  class AddQuizComponent {\n    constructor(cat, quiz) {\n      this.cat = cat;\n      this.quiz = quiz;\n      this.categories = [];\n      this.quizData = {\n        title: '',\n        description: '',\n        maxMarks: '',\n        noOfQuestions: '',\n        active: true,\n        category: {\n          cid: ''\n        }\n      };\n    }\n\n    ngOnInit() {\n      this.cat.categories().subscribe(data => {\n        this.categories = data;\n      }, err => {\n        Swal.fire(\"Error in Loading data from server\");\n      });\n    } //addQuiz\n\n\n    addQuiz() {\n      if (this.quizData.title.trim() == '' || this.quizData.description.trim() == '' || this.quizData.maxMarks == '' || this.quizData.noOfQuestions == '' || this.quizData.category.cid == '' || this.quizData == null) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'All fields are Required!'\n        });\n        return;\n      } //adding quiz into database\n\n\n      this.quiz.addQuiz(this.quizData).subscribe(data => {\n        this.quizData.title = '';\n        this.quizData.description = '';\n        this.quizData.maxMarks = '';\n        this.quizData.noOfQuestions = '';\n        this.quizData.active = false;\n        this.quizData.category = {\n          cid: ''\n        };\n        Swal.fire('success', 'Quiz has been added succesfully', 'success');\n      }, err => {\n        Swal.fire('Error', 'Something went wrong!!');\n      });\n    }\n\n  }\n\n  AddQuizComponent.ɵfac = function AddQuizComponent_Factory(t) {\n    return new (t || AddQuizComponent)(i0.ɵɵdirectiveInject(i1.CategoryServiceService), i0.ɵɵdirectiveInject(i2.QuizServicesService));\n  };\n\n  AddQuizComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddQuizComponent,\n    selectors: [[\"app-add-quiz\"]],\n    decls: 34,\n    vars: 7,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-8\", \"offset-md-1\"], [3, \"ngSubmit\"], [1, \"form-floating\", \"mb-3\"], [\"type\", \"text\", \"name\", \"title\", \"id\", \"title\", \"placeholder\", \"Enter title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"title\"], [\"type\", \"text\", \"name\", \"description\", \"id\", \"description\", \"placeholder\", \"Enter description\", \"required\", \"\", 1, \"form-control\", 2, \"height\", \"170px\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [1, \"form-floating\", \"col-6\"], [\"type\", \"number\", \"name\", \"maxMarks\", \"id\", \"maxMarks\", \"placeholder\", \"Enter description\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"maxMarks\", 2, \"margin-left\", \"15px\"], [\"type\", \"number\", \"name\", \"noOfQuestions\", \"id\", \"noOfQuestions\", \"placeholder\", \"Enter no.of Questions\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"noOfQuestions\", 2, \"margin-left\", \"15px\"], [1, \"pub\"], [\"name\", \"active\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-floating\", \"col-12\", 2, \"margin-top\", \"20px\"], [\"name\", \"category\", \"aria-label\", \".form-select-lg example\", \"required\", \"\", 1, \"form-select\", \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"category\", 2, \"margin-left\", \"15px\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"btn\"], [3, \"value\"]],\n    template: function AddQuizComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"h1\");\n        i0.ɵɵtext(2, \"Add New Quiz\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"div\", 2)(6, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AddQuizComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.addQuiz();\n        });\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.quizData.title = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Title\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 4)(12, \"textarea\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_textarea_ngModelChange_12_listener($event) {\n          return ctx.quizData.description = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Description\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"div\", 9)(17, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.quizData.maxMarks = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"label\", 11);\n        i0.ɵɵtext(19, \"Maximum Marks\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 9)(21, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.quizData.noOfQuestions = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"label\", 13);\n        i0.ɵɵtext(23, \"Number of Questions\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 14)(25, \"mat-slide-toggle\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_mat_slide_toggle_ngModelChange_25_listener($event) {\n          return ctx.quizData.active = $event;\n        });\n        i0.ɵɵtext(26, \"Publish Status\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 16)(28, \"select\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function AddQuizComponent_Template_select_ngModelChange_28_listener($event) {\n          return ctx.quizData.category.cid = $event;\n        });\n        i0.ɵɵtemplate(29, AddQuizComponent_option_29_Template, 2, 2, \"option\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"label\", 19);\n        i0.ɵɵtext(31, \"Categories\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"button\", 20);\n        i0.ɵɵtext(33, \"Add Quiz\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.quizData.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quizData.description);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.quizData.maxMarks);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quizData.noOfQuestions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quizData.active);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.quizData.category.cid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      }\n    },\n    directives: [i3.MatCard, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.NgModel, i4.NumberValueAccessor, i5.MatSlideToggle, i5.MatSlideToggleRequiredValidator, i4.SelectControlValueAccessor, i6.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i7.MatButton],\n    styles: [\".mat-card[_ngcontent-%COMP%]{margin-top:10px}.pub[_ngcontent-%COMP%]{margin-top:20px}.btn[_ngcontent-%COMP%]{margin-top:20px;align-items:center;margin-left:40%}\"]\n  });\n  return AddQuizComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}