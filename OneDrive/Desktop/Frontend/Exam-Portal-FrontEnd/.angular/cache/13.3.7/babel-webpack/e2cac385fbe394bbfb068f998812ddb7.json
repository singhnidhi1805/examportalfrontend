{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/Services/Questions Services/questions-service.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/divider\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/progress-spinner\";\n\nfunction StartQuizComponent_div_0_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h1\", 13);\n    i0.ɵɵtext(2, \"On Going Quiz \");\n    i0.ɵɵelementStart(3, \"b\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.questions[0].quiz.title);\n  }\n}\n\nfunction StartQuizComponent_div_0_mat_card_17_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function StartQuizComponent_div_0_mat_card_17_div_19_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const q_r4 = i0.ɵɵnextContext().$implicit;\n      return q_r4.givenAnswer = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 26);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const q_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", q_r4.option3)(\"ngModel\", q_r4.givenAnswer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(q_r4.option3);\n  }\n}\n\nfunction StartQuizComponent_div_0_mat_card_17_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 18)(2, \"input\", 27);\n    i0.ɵɵlistener(\"ngModelChange\", function StartQuizComponent_div_0_mat_card_17_div_20_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const q_r4 = i0.ɵɵnextContext().$implicit;\n      return q_r4.givenAnswer = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 28);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const q_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", q_r4.option4)(\"ngModel\", q_r4.givenAnswer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(q_r4.option4);\n  }\n}\n\nfunction StartQuizComponent_div_0_mat_card_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 14)(1, \"mat-card-content\")(2, \"p\")(3, \"b\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"span\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"mat-divider\");\n    i0.ɵɵelementStart(7, \"div\", 16)(8, \"div\", 17)(9, \"div\", 18)(10, \"input\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function StartQuizComponent_div_0_mat_card_17_Template_input_ngModelChange_10_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const q_r4 = restoredCtx.$implicit;\n      return q_r4.givenAnswer = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"label\", 20);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"div\", 17)(14, \"div\", 18)(15, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function StartQuizComponent_div_0_mat_card_17_Template_input_ngModelChange_15_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const q_r4 = restoredCtx.$implicit;\n      return q_r4.givenAnswer = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"label\", 22);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(18, \"div\", 23);\n    i0.ɵɵtemplate(19, StartQuizComponent_div_0_mat_card_17_div_19_Template, 5, 3, \"div\", 24);\n    i0.ɵɵtemplate(20, StartQuizComponent_div_0_mat_card_17_div_20_Template, 5, 3, \"div\", 24);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const q_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Q\", i_r5 + 1, \") \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", q_r4.content, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"value\", q_r4.option1)(\"ngModel\", q_r4.givenAnswer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(q_r4.option1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", q_r4.option2)(\"ngModel\", q_r4.givenAnswer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(q_r4.option2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", q_r4.option3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", q_r4.option4);\n  }\n}\n\nfunction StartQuizComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"mat-card\", 5)(5, \"h3\");\n    i0.ɵɵtext(6, \"Instructions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-card-content\")(8, \"ul\")(9, \"li\");\n    i0.ɵɵtext(10, \"Do not Refresh the page Otherwisse you will get new questions in this quiz\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"li\");\n    i0.ɵɵtext(12, \"Do not switch the tab\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"li\");\n    i0.ɵɵtext(14, \"Do not minimize window\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(15, \"div\", 6);\n    i0.ɵɵtemplate(16, StartQuizComponent_div_0_ng_container_16_Template, 5, 1, \"ng-container\", 7);\n    i0.ɵɵtemplate(17, StartQuizComponent_div_0_mat_card_17_Template, 21, 10, \"mat-card\", 8);\n    i0.ɵɵelementStart(18, \"div\", 9)(19, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function StartQuizComponent_div_0_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.submitQuiz();\n    });\n    i0.ɵɵtext(20, \"Submit Quiz\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"div\", 4)(22, \"mat-card\", 5)(23, \"mat-card-header\")(24, \"mat-card-title\");\n    i0.ɵɵtext(25, \"Progress\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"mat-card-subtitle\");\n    i0.ɵɵtext(27, \"Quiz will automatically submitted when time is over.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(28, \"mat-card-content\")(29, \"h1\", 11);\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(31, \"mat-spinner\", 12);\n    i0.ɵɵelementEnd()()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.questions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.questions);\n    i0.ɵɵadvance(13);\n    i0.ɵɵtextInterpolate(ctx_r0.getFormattedTime());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r0.timer / (ctx_r0.questions.length * 2 * 60) * 100);\n  }\n}\n\nfunction StartQuizComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 3)(2, \"div\", 29)(3, \"mat-card\")(4, \"mat-card-header\")(5, \"mat-card-title\");\n    i0.ɵɵtext(6, \"Quiz Results\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"mat-card-content\", 11)(8, \"h1\");\n    i0.ɵɵtext(9, \"Total Marks : \");\n    i0.ɵɵelementStart(10, \"b\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"h1\");\n    i0.ɵɵtext(13, \"Correct Answers : \");\n    i0.ɵɵelementStart(14, \"b\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"h1\");\n    i0.ɵɵtext(17, \"Questions Attempted : \");\n    i0.ɵɵelementStart(18, \"b\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"mat-card-actions\")(21, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function StartQuizComponent_div_1_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.printPDF();\n    });\n    i0.ɵɵtext(22, \"Print\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"button\", 31);\n    i0.ɵɵtext(24, \"Home\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵtextInterpolate(ctx_r1.marksGot);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.correctAnswers);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.attempted);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", \"/user-dashboard/AllQuizzes\");\n  }\n}\n\nexport let StartQuizComponent = /*#__PURE__*/(() => {\n  class StartQuizComponent {\n    constructor(locationSt, route, question) {\n      this.locationSt = locationSt;\n      this.route = route;\n      this.question = question;\n      this.marksGot = 0;\n      this.correctAnswers = 0;\n      this.attempted = 0;\n      this.isSubmit = false;\n    }\n\n    ngOnInit() {\n      this.preventBackButton();\n      this.qid = this.route.snapshot.params['qid'];\n      this.loadQuestions();\n    }\n\n    loadQuestions() {\n      this.question.getQuestionOfQuizForTest(this.qid).subscribe(data => {\n        this.questions = data;\n        this.questions.forEach(q => {\n          this.timer = this.questions.length * 2 * 60;\n          q['givenAnswer'] = '';\n        });\n        this.startTimer();\n      }, err => {\n        Swal.fire(\"Error\", \"Something Went Wrong\", \"error\");\n      });\n    }\n\n    preventBackButton() {\n      history.pushState(null, \"null\", location.href);\n      this.locationSt.onPopState(() => {\n        history.pushState(null, \"null\", location.href);\n      });\n    }\n\n    submitQuiz() {\n      Swal.fire({\n        title: 'Do you want to Submit the Quiz?',\n        showCancelButton: true,\n        confirmButtonText: 'Submit',\n        icon: 'info'\n      }).then(e => {\n        if (e.isConfirmed) {\n          this.evalQuiz();\n        }\n      });\n    }\n\n    startTimer() {\n      let t = window.setInterval(() => {\n        if (this.timer <= 0) {\n          this.submitQuiz();\n          clearInterval(t);\n        } else {\n          this.timer--;\n        }\n      }, 1000);\n    }\n\n    getFormattedTime() {\n      let mm = Math.floor(this.timer / 60);\n      let ss = this.timer - mm * 60;\n      return `${mm} Min:${ss} Sec`;\n    }\n\n    evalQuiz() {\n      this.isSubmit = true;\n      this.questions.forEach(q => {\n        if (q.givenAnswer == q.answer) {\n          this.correctAnswers++;\n          let marksSingle = this.questions[0].quiz.maxMarks / this.questions.length;\n          this.marksGot += marksSingle;\n        }\n\n        if (q.givenAnswer.trim() != '') {\n          this.attempted++;\n        }\n      });\n    }\n\n    printPDF() {\n      window.print();\n    }\n\n  }\n\n  StartQuizComponent.ɵfac = function StartQuizComponent_Factory(t) {\n    return new (t || StartQuizComponent)(i0.ɵɵdirectiveInject(i1.LocationStrategy), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.QuestionsServiceService));\n  };\n\n  StartQuizComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StartQuizComponent,\n    selectors: [[\"app-start-quiz\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"bootstrap-wrapper\", 4, \"ngIf\"], [1, \"bootstrap-wrapper\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [2, \"margin-top\", \"70px\"], [1, \"col-md-8\"], [4, \"ngIf\"], [\"class\", \"mc\", 4, \"ngFor\", \"ngForOf\"], [1, \"container\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"but\", 3, \"click\"], [1, \"text-center\"], [\"mode\", \"determinate\", 2, \"margin\", \"auto\", 3, \"value\"], [1, \"quizHead\"], [1, \"mc\"], [3, \"innerHTML\"], [1, \"row\", 2, \"margin-top\", \"28px\"], [1, \"col-md-6\"], [1, \"form-check\"], [\"type\", \"radio\", \"name\", \"option1\", \"id\", \"exampleRadios1\", 1, \"form-check-input\", 3, \"value\", \"ngModel\", \"ngModelChange\"], [\"for\", \"option1\", 1, \"form-check-label\"], [\"type\", \"radio\", \"name\", \"option2\", \"id\", \"exampleRadios2\", 1, \"form-check-input\", 3, \"value\", \"ngModel\", \"ngModelChange\"], [\"for\", \"option2\", 1, \"form-check-label\"], [1, \"row\", 2, \"margin-top\", \"10px\"], [\"class\", \"col-md-6\", 4, \"ngIf\"], [\"type\", \"radio\", \"name\", \"option3\", \"id\", \"exampleRadios3\", 1, \"form-check-input\", 3, \"value\", \"ngModel\", \"ngModelChange\"], [\"for\", \"option3\", 1, \"form-check-label\"], [\"type\", \"radio\", \"name\", \"option4\", \"id\", \"exampleRadios4\", 1, \"form-check-input\", 3, \"value\", \"ngModel\", \"ngModelChange\"], [\"for\", \"option4\", 1, \"form-check-label\"], [1, \"col-md-6\", \"offset-md-3\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 2, \"margin-left\", \"30%\", \"width\", \"140px\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 2, \"margin-left\", \"2%\", \"width\", \"140px\", 3, \"routerLink\"]],\n    template: function StartQuizComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, StartQuizComponent_div_0_Template, 32, 4, \"div\", 0);\n        i0.ɵɵtemplate(1, StartQuizComponent_div_1_Template, 25, 4, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isSubmit);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSubmit);\n      }\n    },\n    directives: [i1.NgIf, i4.MatCard, i4.MatCardContent, i1.NgForOf, i5.MatDivider, i6.RadioControlValueAccessor, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel, i7.MatButton, i4.MatCardHeader, i4.MatCardTitle, i4.MatCardSubtitle, i8.MatProgressSpinner, i4.MatCardActions, i2.RouterLink],\n    styles: [\".quizHead[_ngcontent-%COMP%], .mc[_ngcontent-%COMP%]{margin-top:20px}.span[_ngcontent-%COMP%]{margin-left:10px}.but[_ngcontent-%COMP%]{margin-top:20px;margin-left:45%}\"]\n  });\n  return StartQuizComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}